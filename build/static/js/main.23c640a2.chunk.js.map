{"version":3,"sources":["components/image/logo.jpg","components/Validation.js","components/useForm.js","components/Formpage.js","components/Form.js","App.js","index.js"],"names":["Validation","values","errors","name","trim","test","phone","length","email","password","useForm","callback","useState","setValues","setErrors","isSubmitting","setIsSubmitting","useEffect","Object","keys","handleChange","e","target","value","handleSubmit","preventDefault","Loginpage","submitForm","className","src","logo","alt","width","height","onSubmit","noValidate","type","autoComplete","onChange","href","Form","setIsSubmitted","Formpage","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23c640a2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.3bbba874.jpg\";","function Validation(values) {\r\n    let errors = {};\r\n\r\n    if (!values.name.trim()) {\r\n        errors.name = 'Name required';\r\n      }\r\n       else if (!/^[A-Za-z]+/.test(values.name.trim())) {\r\n         errors.name = 'Enter a valid name';\r\n      }\r\n\r\n\r\n    if (!values.phone) {\r\n      errors.phone = 'Phone No. is required';\r\n    }\r\n      else if (values.phone.length<10 || values.phone.length>10 ) {\r\n             errors.phone = 'Digit must be 10 number ';\r\n    }\r\n \r\n    if (!values.email) {\r\n      errors.email = 'Email required';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n      errors.email = 'Email address is invalid';\r\n    }\r\n    if (!values.password) {\r\n      errors.password = 'Password is required';\r\n    } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/.test(values.password)) {\r\n      errors.password = 'Minimum eight characters, at least one uppercase letter, one lowercase letter and one number:';\r\n    }\r\n  \r\n    \r\n    return errors;\r\n  }\r\n\r\nexport default Validation\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useForm = (callback, Validation) => {\r\n  const [values, setValues] = useState({\r\n    name: '',\r\n    phone: '',\r\n    email: '',\r\n    password: ''\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    setValues({\r\n      ...values,\r\n      [name]: value\r\n    });\r\n    // localStorage.setItem('myValueInLocalStorage', e.target.value);\r\n \r\n    // setValues(e.target.value);\r\n  };\r\n \r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    setErrors(Validation(values));\r\n    setIsSubmitting(true);\r\n     \r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (Object.keys(errors).length === 0 && isSubmitting) {\r\n        callback();\r\n      }\r\n    },\r\n    [errors]\r\n  );\r\n\r\n  return { handleChange, handleSubmit, values, errors };\r\n};\r\n\r\nexport default useForm;","import React, {useState} from 'react'\r\nimport logo from './image/logo.jpg';\r\nimport Validation from './Validation'\r\nimport useForm from './useForm'\r\n\r\n\r\nconst Loginpage = ({submitForm}) => {\r\n    const {handleChange,handleSubmit,values,errors }  = useForm(\r\n        submitForm,\r\n        Validation\r\n    )\r\n  \r\n \r\n\r\n    return (\r\n          <div className = \"page\">\r\n        <div className = \"contain\">\r\n              <img src = {logo} alt = \"\" width = \"800px\" height= \"680px\" />\r\n            </div>\r\n        <div className = \"container\">\r\n            \r\n            <div className = \"app-wrapper\">\r\n            <div>\r\n                    <h1 className = \"title\">Register</h1>\r\n                </div>\r\n               \r\n                <form onSubmit = {handleSubmit} className = \"form-wrapper\" noValidate> \r\n\r\n                <div className = \"name\">\r\n                        <label className = \"label\">Name</label>\r\n                        <input className = \"input\" \r\n                        type = \"name\" \r\n                        name = \"name\" \r\n                        autoComplete = \"off\"\r\n                        value = {values.name}\r\n                        onChange = {handleChange}/>\r\n                       {errors.name && <p>{errors.name}</p>}\r\n                    </div>\r\n\r\n                    <div className = \"phone\">\r\n                        <label className = \"label\">Phone No.</label>\r\n                        <input className = \"input\" \r\n                        type = \"phone\" \r\n                        name = \"phone\" \r\n                        autoComplete = \"off\"\r\n                        value = {values.phone}\r\n                        onChange = {handleChange}/>\r\n                         {errors.phone && <p>{errors.phone}</p>}\r\n                    </div>\r\n                \r\n                    <div className = \"email\">\r\n                        <label className = \"label\">Email</label>\r\n                        <input className = \"input\" \r\n                        type = \"email\" \r\n                        name = \"email\" \r\n                        autoComplete = \"off\"\r\n                        value = {values.email}\r\n                        onChange = {handleChange}/>\r\n                         {errors.email && <p>{errors.email}</p>}\r\n                    </div>\r\n                 \r\n                    <div className = \"password\">\r\n                        <label className = \"label\">Password</label>\r\n                        <input className = \"input\" \r\n                        type = \"password\" \r\n                        name = \"password\" \r\n                        autoComplete = \"off\"\r\n                        value= {values.password}\r\n                        onChange = {handleChange}/>\r\n                         {errors.password && <p>{errors.password}</p>}\r\n                    </div>\r\n                   \r\n                    <span className='form-input-login'>\r\n                            Already have an account? Login <a href='#'>here</a>\r\n                    </span>\r\n                    <div>\r\n                        <button className = \"submit\" >Register </button>\r\n                    </div>\r\n                  \r\n                </form>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loginpage\r\n","import React, {useState} from 'react'\r\nimport Formpage from './Formpage'\r\n\r\nconst Form  = () => {\r\n\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n    function submitForm() {\r\n      setIsSubmitted(true);\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <Formpage submitForm={submitForm} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form \r\n","\nimport './App.css';\n\nimport React from 'react'\nimport Form from './components/Form';\n\nconst App = () => {\n  return (\n    <div>\n      <Form/>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}